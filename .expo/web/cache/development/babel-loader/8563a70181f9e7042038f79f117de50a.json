{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./style\";\nimport Stars from 'react-native-stars';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Details() {\n  var route = useRoute();\n\n  var customFullStar = _jsx(Icon, {\n    name: 'star',\n    style: {\n      fontSize: 30,\n      color: 'yellow'\n    }\n  });\n\n  var customEmptyStar = _jsx(Icon, {\n    name: 'star-outline',\n    style: {\n      fontSize: 30,\n      color: 'gray'\n    }\n  });\n\n  var customHalfStar = _jsx(Icon, {\n    name: 'star-half',\n    style: {\n      fontSize: 30,\n      color: 'yellow'\n    }\n  });\n\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsx(View, {\n      style: styles.imgFilme,\n      children: _jsx(Image, {\n        style: styles.imagemFilme,\n        source: {\n          uri: \"https://image.tmdb.org/t/p/original/\" + route.params.imagem\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.fields,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: route.params.titulo\n      }), _jsx(Stars, {\n        style: styles.stars,\n        default: parseFloat(route.params.nota),\n        count: 10,\n        half: true,\n        starSize: 50,\n        fullStar: customFullStar,\n        emptyStar: customEmptyStar,\n        halfStar: customHalfStar,\n        fullStarColor: \"yellow\"\n      }), _jsx(Text, {\n        style: styles.nota,\n        children: route.params.nota\n      }), _jsx(Text, {\n        style: styles.descFilmes,\n        children: route.params.desc\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","styles","Stars","Icon","useRoute","Details","route","customFullStar","fontSize","color","customEmptyStar","customHalfStar","body","imgFilme","imagemFilme","uri","params","imagem","fields","title","titulo","stars","parseFloat","nota","descFilmes","desc"],"sources":["C:/Users/Aluno/Downloads/PAM-Imposto-master/src/Screens/Details/index.js"],"sourcesContent":["import React from \"react\";\nimport {View, Text, Image} from 'react-native'\nimport styles from './style';\nimport Stars from 'react-native-stars';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useRoute } from '@react-navigation/native';\n\nexport default function Details(){\n\nconst route = useRoute();\n\n    const customFullStar = (\n        <Icon name={'star'} style={{ fontSize: 30, color: 'yellow' }} />\n    );\n\n    const customEmptyStar = (\n        <Icon name={'star-outline'} style={{ fontSize: 30, color: 'gray' }} />\n    );\n\n    const customHalfStar = (\n        <Icon name={'star-half'} style={{ fontSize: 30, color: 'yellow' }}/>\n    );\n\n    return(\n        <View style ={styles.body}>\n            <View style ={styles.imgFilme}>\n                <Image style ={styles.imagemFilme} source = {{uri:`https://image.tmdb.org/t/p/original/${route.params.imagem}`}}/>\n            </View>\n            <View style ={styles.fields}>\n                <Text style ={styles.title}>\n                    {route.params.titulo}\n                </Text>\n                <Stars style ={styles.stars}\n                    default={parseFloat(route.params.nota)}\n                    count={10}\n                    half={true}\n                    starSize={50} \n                    fullStar={customFullStar}\n                    emptyStar={customEmptyStar}\n                    halfStar={customHalfStar}\n                    fullStarColor=\"yellow\"\n                />\n                <Text style ={styles.nota}>\n                    {route.params.nota}\n                </Text>\n                <Text style ={styles.descFilmes}>\n                    {route.params.desc}\n                </Text>\n            </View>\n        </View>\n    );\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAEA,eAAe,SAASC,OAAT,GAAkB;EAEjC,IAAMC,KAAK,GAAGF,QAAQ,EAAtB;;EAEI,IAAMG,cAAc,GAChB,KAAC,IAAD;IAAM,IAAI,EAAE,MAAZ;IAAoB,KAAK,EAAE;MAAEC,QAAQ,EAAE,EAAZ;MAAgBC,KAAK,EAAE;IAAvB;EAA3B,EADJ;;EAIA,IAAMC,eAAe,GACjB,KAAC,IAAD;IAAM,IAAI,EAAE,cAAZ;IAA4B,KAAK,EAAE;MAAEF,QAAQ,EAAE,EAAZ;MAAgBC,KAAK,EAAE;IAAvB;EAAnC,EADJ;;EAIA,IAAME,cAAc,GAChB,KAAC,IAAD;IAAM,IAAI,EAAE,WAAZ;IAAyB,KAAK,EAAE;MAAEH,QAAQ,EAAE,EAAZ;MAAgBC,KAAK,EAAE;IAAvB;EAAhC,EADJ;;EAIA,OACI,MAAC,IAAD;IAAM,KAAK,EAAGR,MAAM,CAACW,IAArB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAGX,MAAM,CAACY,QAArB;MAAA,UACI,KAAC,KAAD;QAAO,KAAK,EAAGZ,MAAM,CAACa,WAAtB;QAAmC,MAAM,EAAI;UAACC,GAAG,2CAAwCT,KAAK,CAACU,MAAN,CAAaC;QAAzD;MAA7C;IADJ,EADJ,EAII,MAAC,IAAD;MAAM,KAAK,EAAGhB,MAAM,CAACiB,MAArB;MAAA,WACI,KAAC,IAAD;QAAM,KAAK,EAAGjB,MAAM,CAACkB,KAArB;QAAA,UACKb,KAAK,CAACU,MAAN,CAAaI;MADlB,EADJ,EAII,KAAC,KAAD;QAAO,KAAK,EAAGnB,MAAM,CAACoB,KAAtB;QACI,OAAO,EAAEC,UAAU,CAAChB,KAAK,CAACU,MAAN,CAAaO,IAAd,CADvB;QAEI,KAAK,EAAE,EAFX;QAGI,IAAI,EAAE,IAHV;QAII,QAAQ,EAAE,EAJd;QAKI,QAAQ,EAAEhB,cALd;QAMI,SAAS,EAAEG,eANf;QAOI,QAAQ,EAAEC,cAPd;QAQI,aAAa,EAAC;MARlB,EAJJ,EAcI,KAAC,IAAD;QAAM,KAAK,EAAGV,MAAM,CAACsB,IAArB;QAAA,UACKjB,KAAK,CAACU,MAAN,CAAaO;MADlB,EAdJ,EAiBI,KAAC,IAAD;QAAM,KAAK,EAAGtB,MAAM,CAACuB,UAArB;QAAA,UACKlB,KAAK,CAACU,MAAN,CAAaS;MADlB,EAjBJ;IAAA,EAJJ;EAAA,EADJ;AA4BH"},"metadata":{},"sourceType":"module"}