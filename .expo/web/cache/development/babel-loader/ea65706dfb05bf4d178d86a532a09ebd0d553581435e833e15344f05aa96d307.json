{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./style\";\nimport Stars from 'react-native-stars';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Details() {\n  var route = useRoute();\n  var customFullStar = _jsx(Icon, {\n    name: 'star',\n    style: {\n      fontSize: 30,\n      color: 'yellow'\n    }\n  });\n  var customEmptyStar = _jsx(Icon, {\n    name: 'star-outline',\n    style: {\n      fontSize: 30,\n      color: 'gray'\n    }\n  });\n  var customHalfStar = _jsx(Icon, {\n    name: 'star-half',\n    style: {\n      fontSize: 30,\n      color: 'yellow'\n    }\n  });\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsx(View, {\n      style: styles.imgFilme,\n      children: _jsx(Image, {\n        style: styles.imagemFilme,\n        source: {\n          uri: \"https://image.tmdb.org/t/p/original/\" + route.params.imagem\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.fields,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: route.params.titulo\n      }), _jsx(Stars, {\n        style: styles.stars,\n        default: parseFloat(route.params.nota),\n        count: 10,\n        half: true,\n        starSize: 50,\n        fullStar: customFullStar,\n        emptyStar: customEmptyStar,\n        halfStar: customHalfStar,\n        fullStarColor: \"yellow\"\n      }), _jsx(Text, {\n        style: styles.nota,\n        children: route.params.nota\n      }), _jsx(Text, {\n        style: styles.descFilmes,\n        children: route.params.desc\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","Image","styles","Stars","Icon","useRoute","jsx","_jsx","jsxs","_jsxs","Details","route","customFullStar","name","style","fontSize","color","customEmptyStar","customHalfStar","body","children","imgFilme","imagemFilme","source","uri","params","imagem","fields","title","titulo","stars","default","parseFloat","nota","count","half","starSize","fullStar","emptyStar","halfStar","fullStarColor","descFilmes","desc"],"sources":["C:/Users/yumin/Downloads/PAM-Imposto-master/src/Screens/Details/index.js"],"sourcesContent":["import React from \"react\";\nimport {View, Text, Image} from 'react-native'\nimport styles from './style';\nimport Stars from 'react-native-stars';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useRoute } from '@react-navigation/native';\n\nexport default function Details(){\n\nconst route = useRoute();\n\n    const customFullStar = (\n        <Icon name={'star'} style={{ fontSize: 30, color: 'yellow' }} />\n    );\n\n    const customEmptyStar = (\n        <Icon name={'star-outline'} style={{ fontSize: 30, color: 'gray' }} />\n    );\n\n    const customHalfStar = (\n        <Icon name={'star-half'} style={{ fontSize: 30, color: 'yellow' }}/>\n    );\n\n    return(\n        <View style ={styles.body}>\n            <View style ={styles.imgFilme}>\n                <Image style ={styles.imagemFilme} source = {{uri:`https://image.tmdb.org/t/p/original/${route.params.imagem}`}}/>\n            </View>\n            <View style ={styles.fields}>\n                <Text style ={styles.title}>\n                    {route.params.titulo}\n                </Text>\n                <Stars style ={styles.stars}\n                    default={parseFloat(route.params.nota)}\n                    count={10}\n                    half={true}\n                    starSize={50} \n                    fullStar={customFullStar}\n                    emptyStar={customEmptyStar}\n                    halfStar={customHalfStar}\n                    fullStarColor=\"yellow\"\n                />\n                <Text style ={styles.nota}>\n                    {route.params.nota}\n                </Text>\n                <Text style ={styles.descFilmes}>\n                    {route.params.desc}\n                </Text>\n            </View>\n        </View>\n    );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,MAAM;AACb,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI;AACX,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,eAAe,SAASC,OAAOA,CAAA,EAAE;EAEjC,IAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;EAEpB,IAAMO,cAAc,GAChBL,IAAA,CAACH,IAAI;IAACS,IAAI,EAAE,MAAO;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAS;EAAE,CAAE,CAClE;EAED,IAAMC,eAAe,GACjBV,IAAA,CAACH,IAAI;IAACS,IAAI,EAAE,cAAe;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO;EAAE,CAAE,CACxE;EAED,IAAME,cAAc,GAChBX,IAAA,CAACH,IAAI;IAACS,IAAI,EAAE,WAAY;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAS;EAAE,CAAC,CACtE;EAED,OACIP,KAAA,CAACV,IAAI;IAACe,KAAK,EAAGZ,MAAM,CAACiB,IAAK;IAAAC,QAAA,GACtBb,IAAA,CAACR,IAAI;MAACe,KAAK,EAAGZ,MAAM,CAACmB,QAAS;MAAAD,QAAA,EAC1Bb,IAAA,CAACN,KAAK;QAACa,KAAK,EAAGZ,MAAM,CAACoB,WAAY;QAACC,MAAM,EAAI;UAACC,GAAG,2CAAwCb,KAAK,CAACc,MAAM,CAACC;QAAQ;MAAE,CAAC;IAAC,CAChH,CAAC,EACPjB,KAAA,CAACV,IAAI;MAACe,KAAK,EAAGZ,MAAM,CAACyB,MAAO;MAAAP,QAAA,GACxBb,IAAA,CAACP,IAAI;QAACc,KAAK,EAAGZ,MAAM,CAAC0B,KAAM;QAAAR,QAAA,EACtBT,KAAK,CAACc,MAAM,CAACI;MAAM,CAClB,CAAC,EACPtB,IAAA,CAACJ,KAAK;QAACW,KAAK,EAAGZ,MAAM,CAAC4B,KAAM;QACxBC,OAAO,EAAEC,UAAU,CAACrB,KAAK,CAACc,MAAM,CAACQ,IAAI,CAAE;QACvCC,KAAK,EAAE,EAAG;QACVC,IAAI,EAAE,IAAK;QACXC,QAAQ,EAAE,EAAG;QACbC,QAAQ,EAAEzB,cAAe;QACzB0B,SAAS,EAAErB,eAAgB;QAC3BsB,QAAQ,EAAErB,cAAe;QACzBsB,aAAa,EAAC;MAAQ,CACzB,CAAC,EACFjC,IAAA,CAACP,IAAI;QAACc,KAAK,EAAGZ,MAAM,CAAC+B,IAAK;QAAAb,QAAA,EACrBT,KAAK,CAACc,MAAM,CAACQ;MAAI,CAChB,CAAC,EACP1B,IAAA,CAACP,IAAI;QAACc,KAAK,EAAGZ,MAAM,CAACuC,UAAW;QAAArB,QAAA,EAC3BT,KAAK,CAACc,MAAM,CAACiB;MAAI,CAChB,CAAC;IAAA,CACL,CAAC;EAAA,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}